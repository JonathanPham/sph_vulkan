#version 450
#extension GL_ARB_shading_language_420pack : enable

#define WORK_GROUP_SIZE 128

layout (local_size_x = WORK_GROUP_SIZE) in;

// constants
#define TIME_STEP 0.0001f
#define RESTITUTION_COEFFICIENT 0.3f
#define PARTICLE_COUNT 20000

struct particle_type
{
    vec2 position;
    vec2 velocity;
    vec2 force;
    float density;
    float pressure;
};

layout(std430, binding = 0) buffer position_block
{
    particle_type particles[];
};


void main()
{
    uint i = gl_GlobalInvocationID.x;

    // integrate
    vec2 new_velocity = particles[i].velocity + TIME_STEP * particles[i].force / particles[i].density;
    vec2 new_position = particles[i].position + TIME_STEP * new_velocity;

    // handle collision
    if (new_position.x < -1)
    {
        new_position.x = -1;
        new_velocity.x *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (new_position.x > 1)
    {
        new_position.x = 1;
        new_velocity.x *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (new_position.y < -1)
    {
        new_position.y = -1;
        new_velocity.y *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (new_position.y > 1)
    {
        new_position.y = 1;
        new_velocity.y *= -1 * RESTITUTION_COEFFICIENT;
    }
    // write the results
    particles[i].velocity = new_velocity;
    particles[i].position = new_position;
}
