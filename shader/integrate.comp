#version 460

#define WORK_GROUP_SIZE 128

layout (local_size_x = WORK_GROUP_SIZE) in;

// constants
#define PARTICLE_COUNT 20000

#define TIME_STEP 0.0001f
#define RESTITUTION_COEFFICIENT 0.3f

struct particle
{
    vec2 position;
    vec2 velocity;
    vec2 force;
    float density;
    float pressure;
};

layout(std430, binding = 0) buffer particles_block
{
    particle particles[];
};

void main()
{
    uint i = gl_GlobalInvocationID.x;

    // integrate
	vec2 acceleration = particles[i].force / particles[i].density;
    vec2 velocity = particles[i].velocity + TIME_STEP * acceleration;
    vec2 position = particles[i].position + TIME_STEP * velocity;

    // handle collision
    if (position.x < -1)
    {
        position.x = -1;
        velocity.x *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (position.x > 1)
    {
        position.x = 1;
        velocity.x *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (position.y < -1)
    {
        position.y = -1;
        velocity.y *= -1 * RESTITUTION_COEFFICIENT;
    }
    else if (position.y > 1)
    {
        position.y = 1;
        velocity.y *= -1 * RESTITUTION_COEFFICIENT;
    }

    particles[i].velocity = velocity;
    particles[i].position = position;
}
